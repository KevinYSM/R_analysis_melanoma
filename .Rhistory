df <- categs.tab[["glist.cgc.annot"]][
grepl(categs.tab[["glist.cgc.annot"]][["Role.in.Cancer"]],pattern="TSG") & categs.tab[["glist.cgc.annot"]]$sname == sname,]
genes_highlight <- head(df[with(df, order(copy.number, n_genes_in_region)), ]$Gene.Symbol,n=5)
g <- ggplot(df,aes(x=n_genes_in_region,y=copy.number,
label=ifelse(Gene.Symbol %in% genes_highlight & copy.number < 2 & n_genes_in_region < 100,Gene.Symbol,""))) +
geom_point() + geom_text_repel(max.overlaps = 100) + theme_classic() + ylab("Absolute copy number") + xlab("Number of genes in region")
ggsave(g,filename = paste0(outdir,sname,".cnv.cancer_genes_in_regions.tsg.pdf"),width = 4,height = 4)
}
write.table(categs.tab$seg[,colnames(categs.tab$seg)!="sname"],
file=paste0(outdir,"cnv.merged.seg"), sep="\t", col.names = T,
row.names = F,quote = F)
# Change these three lines to read in your own rpkm data instead
fnames.rna <- list.files("~/proj/pawsey_internship/Investigations/data/RNA_gene_counts_data_new/",
pattern="*.s_reverse.gene_counts*", recursive = T, full.names = T)
if (!exists("RPKM_data")){
RPKM_data<-get_RPKM_normalised_data()
}
counts.norm <- RPKM_data
colnames(counts.norm) <- gsub(pattern="PCB-", replacement = "", colnames(counts.norm))
cnv.rna.merged <- merge_cnv_rna(counts.norm, categs.tab)
# Copy number vs RNA scatter
pdf(file=paste0(outdir,"cnv_vs_rna_cgc.pdf"),width = 17,height = 12)
ggplot(cnv.rna.merged, aes(x=copy.number,y=log2(RPKM+1),
fill=Gene.Symbol,color=Role.in.Cancer,
alpha=-log10(n_genes_in_region),
label=Gene.Symbol)) +
geom_point() + guides(fill="none") + theme(legend.position="none") +
geom_text_repel() + facet_wrap(~ sname) + theme_minimal() + xlab("Copy number")
WriteXLS(categs.tab[["cnv.cgc.excel"]],ExcelFileName = paste0(outdir,"cnv.cancer_genes_in_regions.xlsx"),
col.names = T,row.names = F,SheetNames = names(categs.tab[["cnv.cgc.excel"]]),
AutoFilter = T,AdjWidth = T)
paste0(outdir,"cnv.cancer_genes_in_regions.xlsx")
categs.tab[["cnv.cgc.excel"]]
WriteXLS(categs.tab[["cnv.cgc.excel"]],ExcelFileName = paste0(outdir,"cnv.cancer_genes_in_regions.xlsx"),
col.names = T,row.names = F,SheetNames = names(categs.tab[["cnv.cgc.excel"]]),
AutoFilter = T,AdjWidth = T)
perl
Perl
installXLSXsupport(perl = "perl", verbose = FALSE)
WriteXLS(categs.tab[["cnv.cgc.excel"]],ExcelFileName = paste0(outdir,"cnv.cancer_genes_in_regions.xlsx"),
col.names = T,row.names = F,SheetNames = names(categs.tab[["cnv.cgc.excel"]]),
AutoFilter = T,AdjWidth = T)
for (sname in unique(categs.tab[["glist.cgc.annot"]]$sname)){
df <- categs.tab[["glist.cgc.annot"]][
grepl(categs.tab[["glist.cgc.annot"]][["Role.in.Cancer"]],pattern="oncogene") & categs.tab[["glist.cgc.annot"]]$sname == sname,]
genes_highlight <- head(df[with(df, order(-copy.number, n_genes_in_region)), ]$Gene.Symbol,n=5)
g <- ggplot(df,aes(x=n_genes_in_region,y=copy.number,
label=ifelse(Gene.Symbol %in% genes_highlight & copy.number > 2 & n_genes_in_region < 100,Gene.Symbol,""))) +
geom_point() + geom_text_repel(max.overlaps = 100) + theme_classic() + ylab("Absolute copy number") + xlab("Number of genes in region")
ggsave(g,filename = paste0(outdir,sname,".cnv.cancer_genes_in_regions.oncogenes.pdf"),width = 4,height = 4)
df <- categs.tab[["glist.cgc.annot"]][
grepl(categs.tab[["glist.cgc.annot"]][["Role.in.Cancer"]],pattern="TSG") & categs.tab[["glist.cgc.annot"]]$sname == sname,]
genes_highlight <- head(df[with(df, order(copy.number, n_genes_in_region)), ]$Gene.Symbol,n=5)
g <- ggplot(df,aes(x=n_genes_in_region,y=copy.number,
label=ifelse(Gene.Symbol %in% genes_highlight & copy.number < 2 & n_genes_in_region < 100,Gene.Symbol,""))) +
geom_point() + geom_text_repel(max.overlaps = 100) + theme_classic() + ylab("Absolute copy number") + xlab("Number of genes in region")
ggsave(g,filename = paste0(outdir,sname,".cnv.cancer_genes_in_regions.tsg.pdf"),width = 4,height = 4)
}
write.table(categs.tab$seg[,colnames(categs.tab$seg)!="sname"],
file=paste0(outdir,"cnv.merged.seg"), sep="\t", col.names = T,
row.names = F,quote = F)
# Change these three lines to read in your own rpkm data instead
fnames.rna <- list.files("~/proj/pawsey_internship/Investigations/data/RNA_gene_counts_data_new/",
pattern="*.s_reverse.gene_counts*", recursive = T, full.names = T)
if (!exists("RPKM_data")){
RPKM_data<-get_RPKM_normalised_data()
}
if (!exists("RPKM_data")){
RPKM_data<-get_RPKM_normalised_data()
}
counts.norm <- RPKM_data
colnames(counts.norm) <- gsub(pattern="PCB-", replacement = "", colnames(counts.norm))
cnv.rna.merged <- merge_cnv_rna(counts.norm, categs.tab)
# Copy number vs RNA scatter
pdf(file=paste0(outdir,"cnv_vs_rna_cgc.pdf"),width = 17,height = 12)
ggplot(cnv.rna.merged, aes(x=copy.number,y=log2(RPKM+1),
fill=Gene.Symbol,color=Role.in.Cancer,
alpha=-log10(n_genes_in_region),
label=Gene.Symbol)) +
geom_point() + guides(fill="none") + theme(legend.position="none") +
geom_text_repel() + facet_wrap(~ sname) + theme_minimal() + xlab("Copy number")
ggplot(cnv.rna.merged, aes(x=copy.number,y=log2(RPKM+1),
fill=Gene.Symbol,color=Role.in.Cancer,
alpha=-log10(n_genes_in_region),
label=Gene.Symbol)) +
geom_point() + guides(fill="none") + theme(legend.position="none") +
geom_text_repel() + facet_wrap(~ sname) + theme_minimal() + xlab("Copy number")
head(RPKM_data)
head(counts.norm)
counts.norm <- RPKM_data
cnv.rna.merged <- merge_cnv_rna(counts.norm, categs.tab)
# Copy number vs RNA scatter
pdf(file=paste0(outdir,"cnv_vs_rna_cgc.pdf"),width = 17,height = 12)
ggplot(cnv.rna.merged, aes(x=copy.number,y=log2(RPKM+1),
fill=Gene.Symbol,color=Role.in.Cancer,
alpha=-log10(n_genes_in_region),
label=Gene.Symbol)) +
geom_point() + guides(fill="none") + theme(legend.position="none") +
geom_text_repel() + facet_wrap(~ sname) + theme_minimal() + xlab("Copy number")
counts.norm
head(counts.norm)
head(categs.tab[["cnv.cgc.excel"]]$All_CGC_in_regions)
cnv <- categs.tab[["cnv.cgc.excel"]]$All_CGC_in_regions
cnv$sname <- str_split_fixed(cnv$sname,"_vs",2)[,1]
cnv$sname <- gsub(pattern="PCB-",replacement = "",cnv$sname)
cnv$sname <- gsub(pattern="PCB",replacement = "",cnv$sname)
head(cnv)
cnv$sname <- str_split_fixed(cnv$sname,"_",2)[,1]
unique(cnv$sname)
cnv$sname <- str_split_fixed(cnv$sname,"-",2)[,1]
unique(cnv$sname)
cnv$sname <- paste0("PCB-",cnv$sname)
unique(cnv$sname)
merge_cnv_rna <- function(counts.norm, categs.tab){
counts.norm.long <- reshape2::melt(counts.norm)
colnames(counts.norm.long) <- c("Gene.Symbol","sname","RPKM")
cnv <- categs.tab[["cnv.cgc.excel"]]$All_CGC_in_regions
cnv$sname <- str_split_fixed(cnv$sname,"_vs",2)[,1]
cnv$sname <- gsub(pattern="PCB-",replacement = "",cnv$sname)
cnv$sname <- gsub(pattern="PCB",replacement = "",cnv$sname)
cnv$sname <- str_split_fixed(cnv$sname,"-",2)[,1]
cnv$sname <- paste0("PCB-",cnv$sname)
cnv <- cnv[cnv$Gene.Symbol %in% rownames(counts.norm),
c("Gene.Symbol","copy.number","n_genes_in_region",
"Role.in.Cancer","sname")]
cnv.rna.merged <- merge(cnv, counts.norm.long, by=c("Gene.Symbol","sname"))
return(cnv.rna.merged)
}
cnv.rna.merged <- merge_cnv_rna(counts.norm, categs.tab)
# Copy number vs RNA scatter
pdf(file=paste0(outdir,"cnv_vs_rna_cgc.pdf"),width = 17,height = 12)
ggplot(cnv.rna.merged, aes(x=copy.number,y=log2(RPKM+1),
fill=Gene.Symbol,color=Role.in.Cancer,
alpha=-log10(n_genes_in_region),
label=Gene.Symbol)) +
geom_point() + guides(fill="none") + theme(legend.position="none") +
geom_text_repel() + facet_wrap(~ sname) + theme_minimal() + xlab("Copy number")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
# Copy number vs RNA circular scatter
genome_cytoband <- get_genome_cytoband(fai_path)
fai_path <- "N:\\local\\reference\\igenomes\\Homo_sapiens\\GATK\\GRCh38\\Sequence\\WholeGenomeFasta\\Homo_sapiens_assembly38.fasta.fai"
# Copy number vs RNA circular scatter
genome_cytoband <- get_genome_cytoband(fai_path)
cnv_genes <- categs.tab$cnv.cgc.excel$All_CGC_in_regions
cnv_genes$sname <- str_split_fixed(cnv_genes$sname, "_vs", 2)[,1]
cnv_genes$sname <- gsub(pattern="PCB-", replacement = "", cnv_genes$sname)
cnv_genes$sname <- gsub(pattern="PCB", replacement = "", cnv_genes$sname)
cnv_genes$sname <- str_split_fixed(cnv_genes$sname,"-",2)[,1]
cnv_genes$sname <- paste0("PCB-",cnv_genes$sname)
cnv_genes.matched_rna <- cnv_genes[cnv_genes$sname %in% intersect(
cnv_genes$sname,cnv.rna.merged$sname),]
seg <- read.table(file = paste0(outdir,"cnv.merged.seg"), header=T)
seg$ID <- str_split_fixed(seg$ID,"_vs",2)[,1]
seg$ID <- gsub(pattern="PCB-", replacement = "", seg$ID)
seg$ID <- gsub(pattern="PCB", replacement = "", seg$ID)
seg.matched_rna <- seg[seg$ID %in% intersect(seg$ID, cnv.rna.merged$sname),]
bed_all <- get_bed_all(map)
bed <- list()
for (sname in unique(seg.matched_rna$ID)){
bed[[sname]] <- get_bed(seg = seg.matched_rna,
id_pr = sname,
bed_all = bed_all,
genome_cytoband = genome_cytoband,
cnv_genes = cnv_genes.matched_rna,
cnv.rna.merged = cnv.rna.merged)
}
for (indv in names(bed)){
g <- plot_cnv_circular_scatter(bed_all = bed[[sname]]$bed_all,
id_pr = sname,
id_pdx = NULL,
genome_cytoband = genome_cytoband,
cnv.rna.merged = cnv.rna.merged)
ggsave(plot = g,
filename = paste0(outdir, "/", indv, ".cnv.circular_scatter.pdf"),
width = 10, height = 6)
}
# Write session info ------------------------------------------------------------
s <- sessionInfo()
saveRDS(s,paste0(outdir,"/sessionInfo.rda"))
immune_related_genes<-as.data.frame(read_excel("data/immune_related_genes.xlsx",trim_ws=TRUE))
immune_related_genes<-as.data.frame(read_excel("data/immune_related_genes.xlsx",trim_ws=TRUE))
setwd("~/Pawsey Internship/R_analysis_melanoma")
immune_related_genes<-as.data.frame(read_excel("data/immune_related_genes.xlsx",trim_ws=TRUE))
View(immune_related_genes)
if (!exists("immune_gene_filtered_RPKM"))
View(immune_related_genes)
if (!exists("immune_gene_filtered_RPKM")){
immune_gene_filtered_RPKM<-log2_filtered_RPKM[,immune_related_genes$immune_related_genes]
}
if (!exists("immune_gene_filtered_RPKM")){
immune_gene_filtered_RPKM<-log2_filtered_RPKM[,immune_related_genes$immune_related_genes]
}
View(log2_filtered_RPKM)
immune_gene_filtered_RPKM<-log2_filtered_RPKM[immune_related_genes$immune_related_genes,]
if (!exists("immune_gene_filtered_RPKM")){
immune_gene_filtered_RPKM<-log2_filtered_RPKM[immune_related_genes$immune_related_genes,]
}
log2_filtered_RPKM
immune_gene_filtered_RPKM<-log2_filtered_RPKM[,rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes]
if (!exists("immune_gene_filtered_RPKM")){
immune_gene_filtered_RPKM<-log2_filtered_RPKM[,rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes]
}
immune_gene_filtered_RPKM<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]
if (!exists("immune_gene_filtered_RPKM")){
immune_gene_filtered_RPKM<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]
}
immune_gene_filtered_RPKM<-as.data.frame(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,])
View(immune_gene_filtered_RPKM)
if (!exists("chemokine_gene_filtered_RPKM")){
chemokine_gene_filtered_RPKM<-as.data.frame(log2_filtered_RPKM[immune_related_genes$chemokines,])
}
if (!exists("chemokine_gene_filtered_RPKM")){
chemokine_gene_filtered_RPKM<-as.data.frame(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,])
}
if (!exists("interleukin_gene_filtered_RPKM")){
interleukin_gene_filtered_RPKM<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,]
}
heatmap_metadata<-read_excel("data/sample_info.v3.xlsx")
heatmap_metadata<-read_excel("data/sample_info.v3.xlsx")
heatmap_metadata<-read_excel("data/sample_info_v3.xlsx")
rownames(heatmap_metadata)<-heatmap_metadata$`PCB code`
rownames(heatmap_metadata)<-heatmap_metadata$`PCB code`
heatmap_metadata
if (!exists("interleukin_gene_filtered_RPKM")){
interleukin_gene_filtered_RPKM<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,]
}
#Generate Heatmap
heatmap_metadata<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
#Remove Leading 0s
heatmap_metadata$`PCB code`<- sub("^0+", "", heatmap_metadata$`PCB code`)
#Add PCB-
heatmap_metadata$`PCB code`<-paste0("PCB-", heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-gsub(pattern="PCB-9", replacement="PCB-09",heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-substr(heatmap_metadata$`PCB code`,1,nchar(heatmap_metadata$`PCB code`)-1)
rownames(heatmap_metadata)<-heatmap_metadata$`PCB code`
heatmap_metadata<-heatmap_metadata[,c("Gender", "Tumor site","Treatment pre or post (none have previous other treatment)")]
colnames(heatmap_metadata)<-c("Gender","Tumor Site","Treatment Status")
pheatmap(cor(immune_related_genes), border_color = NA, annotation_col = heatmap_metadata)
pheatmap(cor(immune_gene_filtered_RPKM), border_color = NA, annotation_col = heatmap_metadata)
pheatmap(cor(chemokine_gene_filtered_RPKM), border_color = NA, annotation_col = heatmap_metadata)
pheatmap(cor(interleukin_gene_filtered_RPKM), border_color = NA, annotation_col = heatmap_metadata)
#Get RPKM Values
if (!exists("RPKM_data")){
RPKM_data<-get_RPKM_normalised_data()
}
#Filter RPKM Values
if (!exists("filtered_genes")){
filtered_genes<-get_filtered_genes()
}
library(ggfortify)
library(cluster)
library("pheatmap")
#Get RPKM Values
if (!exists("RPKM_data")){
RPKM_data<-get_RPKM_normalised_data()
}
#Filter RPKM Values
if (!exists("filtered_genes")){
filtered_genes<-get_filtered_genes()
}
if (!exists("filtered_RPKM")){
filtered_RPKM<-get_filtered_rpkm()
}
#Get log2RPKM
if (!exists("log2_RPKM")){
log2_filtered_RPKM<-log2(filtered_RPKM+1)
}
#Perform PCA analysis
pca_res<-prcomp(t(log2_filtered_RPKM), scale. = TRUE)
g<-autoplot(pca_res, data=t(log2_filtered_RPKM), label=TRUE)
library("readxl")
sample_data<-as.data.frame(read_excel("sample_info_v3.xlsx", trim_ws=TRUE))
sample_data<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
sample_data$`PCB code`<-substr(sample_data$`PCB code`,1,nchar(sample_data$`PCB code`)-1)
#Remove Leading 0s
sample_data$`PCB code`<- sub("^0+", "", sample_data$`PCB code`)
#Add PCB-
sample_data$`PCB code`<-paste0("PCB-", sample_data$`PCB code`)
sample_data$`PCB code`<-gsub(pattern="PCB-9", replacement="PCB-09",sample_data$`PCB code`)
sample_data$`PCB code`<-substr(sample_data$`PCB code`,1,nchar(sample_data$`PCB code`)-1)
rownames(sample_data)<-sample_data$`PCB code`
View(sample_data)
library("readxl")
sample_data<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
sample_data$`PCB code`<-substr(sample_data$`PCB code`,1,nchar(sample_data$`PCB code`)-1)
#Remove Leading 0s
sample_data$`PCB code`<- sub("^0+", "", sample_data$`PCB code`)
#Add PCB-
sample_data$`PCB code`<-paste0("PCB-", sample_data$`PCB code`)
sample_data$`PCB code`<-gsub(pattern="PCB-9", replacement="PCB-09",sample_data$`PCB code`)
View(sample_data)
rownames(sample_data)<-sample_data$`PCB code`
sample_data<-subset(sample_data, sample_data$RNAseq=="Y")
merged_pca_sample_data<-merge(sample_pca, sample_data, by.x="sample_id", by.y="PCB code")
#Perform PCA analysis
pca_res<-prcomp(t(log2_filtered_RPKM), scale. = TRUE)
plot(pca_res)
autoplot(pca_res, data=t(log2_filtered_RPKM), label=TRUE)
View(log2_filtered_RPKM)
if (!exists("immune_related_genes")){
immune_related_genes<-as.data.frame(read_excel("data/immune_related_genes.xlsx",trim_ws=TRUE))
}
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,]), label=TRUE)
log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% c("ABL1"),]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% c("ABL1", "ABL2"),]), label=TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% c("ABL1", "ABL2"),]), label=TRUE)
immune_log2_filtered_rpkm<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]
chemokine_log2_filtered_rpkm<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,]
interleukin_log2_filtered_rpkm<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,]
immune_log2_filtered_rpkm<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]
chemokine_log2_filtered_rpkm<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,]
interleukin_log2_filtered_rpkm<-log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,]
pca_res<-prcomp(t(immune_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]), label=TRUE)
pca_res<-prcomp(t(chemokine_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,]), label=TRUE)
pca_res<-prcomp(t(interleukin_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,]), label=TRUE)
immune_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,])
chemokine_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,])
interleukin_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,])
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]), label=TRUE)
autoplot(pca_res, data=(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]), label=TRUE)
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]), label=TRUE)
autoplot(pca_res, data=immune_log2_filtered_rpkm, label=TRUE)
pca_res<-prcomp((chemokine_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=chemokine_log2_filtered_rpkm, label=TRUE)
pca_res<-prcomp((interleukin_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=interleukin_log2_filtered_rpkm, label=TRUE)
View(immune_log2_filtered_rpkm)
View(heatmap_metadata)
View(heatmap_metadata)
merge(immune_log2_filtered_rpkm, heatmap_metadata, by.x=rownames(immune_log2_filtered_rpkm), by.y=rownames(heatmap_metadata))
merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
View(a)
#get sample metadata
heatmap_metadata<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
#Remove Leading 0s
heatmap_metadata$`PCB code`<- sub("^0+", "", heatmap_metadata$`PCB code`)
#Add PCB-
heatmap_metadata$`PCB code`<-paste0("PCB-", heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-gsub(pattern="PCB-9", replacement="PCB-09",heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-substr(heatmap_metadata$`PCB code`,1,nchar(heatmap_metadata$`PCB code`)-1)
rownames(heatmap_metadata)<-heatmap_metadata$`PCB code`
#Perform PCA analysis
immune_log2_filtered_rpkm<-merge(t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,]),heatmap_metadata, by="row.names")
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=immune_log2_filtered_rpkm, label=TRUE)
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
#get sample metadata
heatmap_metadata<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
#Remove Leading 0s
heatmap_metadata$`PCB code`<- sub("^0+", "", heatmap_metadata$`PCB code`)
#Add PCB-
heatmap_metadata$`PCB code`<-paste0("PCB-", heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-gsub(pattern="PCB-9", replacement="PCB-09",heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-substr(heatmap_metadata$`PCB code`,1,nchar(heatmap_metadata$`PCB code`)-1)
rownames(heatmap_metadata)<-heatmap_metadata$`PCB code`
#Perform PCA analysis
immune_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,])
chemokine_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,])
interleukin_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,])
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm,heatmap_metadata, by="row.names"), label=TRUE)
pca_res<-prcomp((chemokine_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=merge(chemokine_log2_filtered_rpkm,heatmap_metadata, by="row.names"), label=TRUE)
pca_res<-prcomp((interleukin_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=merge(interleukin_log2_filtered_rpkm,heatmap_metadata, by="row.names"), label=TRUE)
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm,heatmap_metadata, by="row.names"), label=TRUE)
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm,heatmap_metadata, by="row.names"), label=TRUE, color='Gender')
View(immune_log2_filtered_rpkm)
colnames(heatmap_metadata)
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm,heatmap_metadata, by="row.names"), label=TRUE, color=Gender)
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm,heatmap_metadata, by="row.names"), label=TRUE, color=Gender)
iris
a<-merge(immune_log2_filtered_rpkm,heatmap_metadata, by="row.names")
View(a)
autoplot(pca_res, data=a, label=TRUE, color='Gender')
autoplot(pca_res, data=a, label=TRUE, color='Gender ')
autoplot(pca_res, data=a, label=TRUE, color='TIDE Values')
autoplot(pca_res, data=a,  color='TIDE Values')
autoplot(pca_res, data=a, label=TRUE, colour='TIDE Values')
autoplot(pca_res, data=a, label=TRUE, colour="Tide Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE Values")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
colnames(heatmap_metadata)<-make.names(colnames(heatmap_metadata))
colnames(heatmap_metadata)
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Values")
colnames(heatmap_metadata)<-make.names(colnames(heatmap_metadata))
rownames(heatmap_metadata)<-heatmap_metadata$`PCB code`
#Perform PCA analysis
immune_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,])
chemokine_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,])
interleukin_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,])
autoplot(pca_res, data=immune_log2_filtered_rpkm, label=TRUE, colour="TIDE.Values")
colnames(heatmap_metadata)
autoplot(pca_res, data=immune_log2_filtered_rpkm, label=TRUE, colour="TIDE.Prediction")
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm,heatmap_metadata,by="row.names"), label=TRUE, colour="Gender")
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm,heatmap_metadata,by="row.names"), label=TRUE, colour="Gender")
amerge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names"), label=TRUE, colour="Gender")
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names"), label=TRUE)
autoplot(pca_res, data=merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names"), label=TRUE, colour="Gender")
autoplot(pca_res, data<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names"), label=TRUE, colour="Gender")
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
#get sample metadata
heatmap_metadata<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
#Remove Leading 0s
heatmap_metadata$`PCB code`<- sub("^0+", "", heatmap_metadata$`PCB code`)
#Add PCB-
heatmap_metadata$`PCB code`<-paste0("PCB-", heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-gsub(pattern="PCB-9", replacement="PCB-09",heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-substr(heatmap_metadata$`PCB code`,1,nchar(heatmap_metadata$`PCB code`)-1)
colnames(heatmap_metadata)<-make.names(colnames(heatmap_metadata))
#get sample metadata
heatmap_metadata<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
#Remove Leading 0s
heatmap_metadata$`PCB code`<- sub("^0+", "", heatmap_metadata$`PCB code`)
#get sample metadata
heatmap_metadata<-as.data.frame(read_excel("data/sample_info_v3.xlsx", trim_ws=TRUE))
#Remove Leading 0s
heatmap_metadata$`PCB code`<- sub("^0+", "", heatmap_metadata$`PCB code`)
#Add PCB-
heatmap_metadata$`PCB code`<-paste0("PCB-", heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-gsub(pattern="PCB-9", replacement="PCB-09",heatmap_metadata$`PCB code`)
heatmap_metadata$`PCB code`<-substr(heatmap_metadata$`PCB code`,1,nchar(heatmap_metadata$`PCB code`)-1)
colnames(heatmap_metadata)<-make.names(colnames(heatmap_metadata))
rownames(heatmap_metadata)<-heatmap_metadata$`PCB code`
#Perform PCA analysis
immune_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,])
chemokine_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,])
interleukin_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,])
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
View(immune_log2_filtered_rpkm)
View(heatmap_metadata)
rownames(heatmap_metadata)<-heatmap_metadata$`PCB.code`
#Perform PCA analysis
immune_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$immune_related_genes,])
chemokine_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$chemokines,])
interleukin_log2_filtered_rpkm<-t(log2_filtered_RPKM[rownames(log2_filtered_RPKM) %in% immune_related_genes$interleukins,])
pca_res<-prcomp((immune_log2_filtered_rpkm), scale. = TRUE)
a<-merge(immune_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Values")
colnames(heatmap_metadata)
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Prediction")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.before.surgery")
autoplot(pca_res, data=a, label=TRUE, colour="Cell.line.successfully.generated.from.PDX")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.pre.or.post..none.have.previous.other.treatment.")
colnames(heatmap_metadata)
pca_res<-prcomp((chemokine_log2_filtered_rpkm), scale. = TRUE)
a<-merge(chemokine_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Prediction")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.before.surgery")
autoplot(pca_res, data=a, label=TRUE, colour="Cell.line.successfully.generated.from.PDX")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.pre.or.post..none.have.previous.other.treatment.")
pca_res<-prcomp((interleukin_log2_filtered_rpkm), scale. = TRUE)
a<-merge(interleukin_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Prediction")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.before.surgery")
autoplot(pca_res, data=a, label=TRUE, colour="Cell.line.successfully.generated.from.PDX")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.pre.or.post..none.have.previous.other.treatment.")
help(rbind)
all_immune_genes_log2_filtered_rpkm<-rbind(rbind(immune_log2_filtered_rpkm,chemokine_log2_filtered_rpkm),interleukin_log2_filtered_rpkm)
all_immune_genes_log2_filtered_rpkm<-cbind(cbind(immune_log2_filtered_rpkm,chemokine_log2_filtered_rpkm),interleukin_log2_filtered_rpkm)
View(all_immune_genes_log2_filtered_rpkm)
pca_res<-prcomp((all_immune_genes_log2_filtered_rpkm), scale. = TRUE)
a<-merge(all_immune_genes_log2_filtered_rpkm, heatmap_metadata, by="row.names")
autoplot(pca_res, data=a, label=TRUE, colour="Gender")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Values")
autoplot(pca_res, data=a, label=TRUE, colour="TIDE.Prediction")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.before.surgery")
autoplot(pca_res, data=a, label=TRUE, colour="Cell.line.successfully.generated.from.PDX")
autoplot(pca_res, data=a, label=TRUE, colour="Treatment.pre.or.post..none.have.previous.other.treatment.")
